{
  
    
        "post0": {
            "title": "Makeover Monday 2020 Week 45",
            "content": "Dedicated video game sales units . The original data visualisation . . What works . Easy to compare annual hardware sales of regions combined . By comparing the height of the stacked bars, it’s simple to see that hardware sales have increased with each passing year. . What doesn’t work . No data for 2016 . Without any data for 2016, there is unused space on the left side which can be reclaimed. . The reason that there isn’t any data is related to the fact that the Nintendo Switch wasn’t released until March 3, 2017. . What the dates represent is unclear . It’s unclear what the dates along the x-axis represent. . Is the visualisation comparing units sold between: . March of each year? | The end of Q1 of each year? | Fiscal years, beginning or ending in March? | . Appears to be under performance in 3/2017 . The visualisation seems to show that the Nintendo Switch underperformed in 3/2017, and no explanation is given. . However, If we combine the fact that 1) the platform launched on March 3, 2017, and 2) from the source website, we discover that Nintendo’s fiscal year ends in March, then a reasonable conclusion is that the dates do represent the end of fiscal years. 3/2017 has only 1 month of sales, whereas the subsequent data points contain an whole fiscal year’s worth — it is technically not an underperformance. . Hardware and software units in the same chart . Hardware and software units not are comparable (unlike revenue), so there’s little reason to combine them into the same chart using dual axes. . The axes are not even the same magnitudes. . It’s also easy for the lines to be mistake as trend lines for the bars. . Difficult to tell if the lines are stacked . While it’s clear the the bars are stacked, allowing the reader to compare annual totals, it’s unclear if the same is true for the lines. . Inconsistent region colours . Both the hardware and software data are split by region: . Japan | The Americas | Europe | Other | . However, the colour coding of region are inconsistent, which makes it difficult to recognise them when they appear in multiple places. . My makeover . I decided split the chart in two: hardware and software. . Remove 2016. .",
            "url": "https://mmhchan.github.io/blog/makeovermonday/2020/11/08/makeovermonday-45-2020.html",
            "relUrl": "/makeovermonday/2020/11/08/makeovermonday-45-2020.html",
            "date": " • Nov 8, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Makeover Monday 2020 Week 43",
            "content": "Apparel exports to the US . The original data visualisation . The original data visualisation does a good job of showing the monthly evolution of exports for each year, and how the data from 2019 compares to 2020. . However, the y-axis between countries have different scales, which can mislead readers about the magnitude of the deficit. For example, the total lost value of India is far greater than El Salvador, but the latter occupies a greater area. . . My makeover . As the original report was about year-over-year differences, I decided to focus my makeover on this specifically. The dashboard can present the difference either in dollars or as a percentage. . I made the y-axis between each country consistent, to make it easier to compare countries than in the original. . . In hindsight, removing the M for million from the data labels, and mentioning the scale in the subtitle would make the numbers more readable. . What I could improve upon . Data visualisation . Writing better titles and subtitles. | Including a paragraph to explain the context and/or insight around the topic. | Having a clear idea of the dashboard dimensions before working on it. | Creating my own visual styles. | . Mindset . Overcome perfectionist tendencies. | Avoid judging my work relative to that of others. | Trust in the benefits of long term practice. | Get comfortable with seeking feedback. | . I plan to incorporate the Viz Review Webinars into my routine, as I think it would be encouraging to see peers who are also improving their skills. . Getting accustomed to the Makeover Monday process will take some time, but the only way to overcome this is to repeat this process. .",
            "url": "https://mmhchan.github.io/blog/makeovermonday/2020/11/07/makeovermonday-43-2020.html",
            "relUrl": "/makeovermonday/2020/11/07/makeovermonday-43-2020.html",
            "date": " • Nov 7, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://mmhchan.github.io/blog/2020/01/14/test-markdown-post.html",
            "relUrl": "/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://mmhchan.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page3": {
          "title": "Now",
          "content": "This is where you put the contents of your Now page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://mmhchan.github.io/blog/now/",
          "relUrl": "/now/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://mmhchan.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}